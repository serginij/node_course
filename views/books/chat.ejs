<div class="row">
  <div class="col-sm-8">
      <div class="card">
          <div class="card-body">
              <div class='d-flex justify-content-between'>
                  <h5 class="card-title">Book chat</h5>
                  <p class="card-text"><%= chat.views %> people</p>
              </div>

              <b class='card-label'>ID</b>
              <p class="card-text"><%= chat._id %></p>

              <div class="form-group">
                <div class="card">
                  <b class='card-text'>All messages</b>
                    <div id="list" class="card-body list-group">
        
                    </div>
                </div>
              </div>

              <div class="form-group">
                <label for="chatMessage">Send message</label>
                <textarea
                  rows="3"
                  name="message"
                  class="form-control"
                  id="chatMessage"
                ><%= chat.message %></textarea>
              </div>

              <div class="text-right">
                  <form action="/books/<%= book._id %>/download" method="GET" class="d-inline">
                      <button class="btn btn-sm btn-primary">
                          Send
                      </button>
                  </form>
              </div>
          </div>
      </div>
  </div>
</div>
<script>
    const roomName = location.pathname.split('/').pop();
    const socket = io.connect('/', {query: `roomName=${roomName}`});
    const messagesList = document.querySelector('#list');
    // const inputUsername = document.querySelector('#username');
    const messageInput = document.querySelector('#chatMessage');
    const sendAll = document.querySelector('#send-all');
    // const sendMe = document.querySelector('#send-me');
    const sendRoom = document.querySelector('#send-room');

    const username = `test${Math.ceil(Math.random() * 100)}`

    const getTmp = (msg) => {
        return `
                <div class="list-group-item list-group-item-action">
                    <div class="d-flex w-100 justify-content-between">
                        <small>${msg.username}</small>
                        <small class="text-muted">${msg.type}</small>
                    </div>
                    <p class="mb-1">${msg.text}</p>
                </div>
        `;
    };

    // socket.on('message-to-me', (msg) => {
    //     const div = getTmp(msg);
    //     messagesList.insertAdjacentHTML('beforeend', div);
    // });

    // sendMe.addEventListener('click', () => {
    //     socket.emit('message-to-me', {
    //         username,
    //         text: messageInput.value,
    //     });
    // });


    socket.on('message-to-all', (msg) => {
        const div = getTmp(msg);
        messagesList.insertAdjacentHTML('beforeend', div);
    });

    sendAll.addEventListener('click', () => {
        socket.emit('message-to-all', {
            username,
            text: messageInput.value,
        });
    });

    socket.on('message-to-room', (msg) => {
        const div = getTmp(msg);
        messagesList.insertAdjacentHTML('beforeend', div);
    });

    sendRoom.addEventListener('click', () => {
        socket.emit('message-to-room', {
            username,
            text: messageInput.value,
        });
    });
</script>